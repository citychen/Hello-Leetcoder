/*
https://leetcode.com/problems/isomorphic-strings/
You are here! Runtime: 40 ms
Your runtime beats 22.19% of javasubmissions.
https://leetcode.com/submissions/detail/55727956/
idea:最直覺的 一個字一個字比
*/
public class Solution {
    public boolean isIsomorphic(String s, String t) {
        if(s.length()!=t.length())
           return false;
        char Chars[]=s.toCharArray();
        char Chart[]=t.toCharArray();
        HashMap map = new HashMap();    //使用map查詢是否使用過(hashTable)
        HashMap map1 = new HashMap();
        for(int i=0;i<s.length();i++)           //每個位置檢查此字之代碼
        {
          if(map.get(Chars[i])!=null && map1.get(Chart[i])==null)//若此位置 s字串有 t字串無
              return false;
          else if(map.get(Chars[i])==null && map1.get(Chart[i])!=null)//若此位置 t字串有 s字串無
              return false;
          else if(map.get(Chars[i])!=map1.get(Chart[i]))  //此位置兩字代碼不同
              return false;
          else if(map.get(Chars[i])==null && map1.get(Chart[i])==null) //兩字皆無, 則放入map 以及對應之代碼
          {
              map.put(Chars[i],i);
              map1.put(Chart[i],i);
          }
        }
        return true;
   }
}
