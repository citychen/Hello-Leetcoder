/*
https://leetcode.com/problems/isomorphic-strings/
You are here! Runtime: 5 ms
Your runtime beats 98.16% of javasubmissions.
https://leetcode.com/submissions/detail/55727130/
idea:使用字元編碼的概念
*/
public class Solution {
    public boolean isIsomorphic(String s, String t) {
        
       if(s.length() != t.length()) 
          return false;
    
       int pointS, pointT;
       char[] charS = s.toCharArray();
       char[] charT = t.toCharArray();

       int[] a = new int[256];//儲存代號  (為每個char 給予一個代號使用)
       int[] b = new int[256];

       for(int i = 0; i != s.length(); i++)
       {
          pointS = charS[i];  //以字元編碼作為array index
          pointT = charT[i];
          if(a[pointS] != b[pointT])  // 若兩個代號不同  false
             return false;
          else if(b[pointS] == 0)   //若兩代號相同,僅有皆為代號0  以及 之前存入的代號Q?  
          {
             a[pointS] = i+1;
             b[pointT] = i+1;
          } 
       }
       return true; 
    }
}
