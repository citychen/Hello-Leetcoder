/*
https://leetcode.com/problems/counting-bits/
Runtime: 3 ms
https://leetcode.com/submissions/detail/62582501/

規律是 該數字的counting bit 為 [最大可減的pow(2)=1] + 剩餘數字的counting bit
 8(1000) = 0    + 8 (1) = 1
 9(1001) = 1(1) + 8 (1) = 2
10(1010) = 2(1) + 8 (1) = 2
11(1011) = 3(2) + 8 (1) = 3

*/


public class Solution {
    public int[] countBits(int num) {
        int ans[]=new int[num+1];
        int pow=1,ever=1;
        
        for(int i=1;i<=num;i++)
        {
            if(i==pow)
            {
                ans[i]=1;         //2的指數定為1
                ever=1;           //ever 重設為1  , 之後的數字,從1開始加(例如 8 到 9)
                pow=pow<<1;
            }
            else
            {
                ans[i]=ans[ever]+1;  //看之前數字的counting bit為多少  ,  +1的那個1為 指數的分
                ever++;
            }
        }
        return ans;
    }
}
