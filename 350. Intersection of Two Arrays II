https://leetcode.com/problems/intersection-of-two-arrays-ii/
Runtime: 6 ms
You are here! 
Your runtime beats 64.88% of java submissions
https://leetcode.com/submissions/detail/92422185/



public class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        //空陣列必定不會有交集所以回傳[];
        if(nums1.length==0 || nums2.length==0) return new int[0];
        
        //為了題目提示的Tag: BinarySearch做的 , 二分搜尋法必須在有排序的array使用
        //為了要用二分搜尋法, 所以每次找到那個數字後, 要移項.以保持大小的順序.
        //反正就是找出nums2的數字後,用二分搜尋法,去看nums1的數字是否有
        
        List<Integer> list =new ArrayList<Integer>();
        int findCount=0;
        Arrays.sort(nums1);
        for(int i=0;i<nums2.length;i++)
        {
            if(binarySearch(nums1,findCount,nums1.length-1,nums2[i]))
            {   
                list.add(nums2[i]);
                findCount++;
            }
        }
        
        int ans[]=new int [list.size()];
        for(int j=0;j<list.size();j++)
            ans[j]=list.get(j);
        
        return ans;
    }
    
    public boolean binarySearch(int nums[],int left,int right,int target)
    {
        int index,value;
        
        while(left<=right)
        {
            index=(left+right)/2;
            value=nums[index];
            if(value>target)
                right=index-1;
            else if (value < target)
                left=index+1;
            else
            {
                for(int i=index-1;i>=0;i--)
                    nums[i+1]=nums[i];
                return true;
            }
                
        }
        return false;
    }
}



