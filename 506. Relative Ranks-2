https://leetcode.com/problems/relative-ranks/
Runtime: 25 ms
You are here! 
Your runtime beats 51.44% of java submissions.
https://leetcode.com/submissions/detail/93201419/


public class Solution {
    public String[] findRelativeRanks(int[] nums) {
        //把nums數字丟入TreeMap,讓TreeMap來自動排序.
        //再依序poll出,存入相對位置
        TreeMap<Integer,Integer> treemap=new TreeMap<Integer,Integer>();
        String ans[]=new String[nums.length];
        
        for (int i=0;i<nums.length;i++)
            treemap.put(nums[i],i);
        
        int rank=nums.length;
        
        //TreeMap官網- TreeMap Key 加入後,以遞升的順序排列
        //http://docs.oracle.com/javase/7/docs/api/java/util/TreeMap.html#entrySet()
        
        //使用iterator取出集合內所有的值
        //http://pclevin.blogspot.tw/2011/12/java-iterator.html
        for ( Iterator<Integer> iter = treemap.keySet().iterator(); iter.hasNext(); ) {
            //Integer key = iter.next();
            switch(rank)
            {
                case 1:
                    ans[treemap.get(iter.next())]="Gold Medal";
                    break;
                case 2:
                    ans[treemap.get(iter.next())]="Silver Medal";
                    break;
                case 3:
                    ans[treemap.get(iter.next())]="Bronze Medal";
                    break;
                default :
                    ans[treemap.get(iter.next())]=Integer.toString(rank);
            }
            rank--;
        }
        return ans;
    }
}
