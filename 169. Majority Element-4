public class Solution {
    public int majorityElement(int[] nums) {
        int count=1;
        int major=nums[0];
        
        //題目假設陣列中必存在一個數字的出現次數超過陣列大小的1/2.
        //You may assume that the array is non-empty and the majority element always exist in the array.
        //The majority element is the element that appears more than ⌊ n/2 ⌋ times.
        //因此若有一個這樣的數字,其次數必定比陣列中其他數字的次數加起來還多.
        //
        
        for(int i=1;i<nums.length;i++)
        {
            if(major==nums[i])
                count++;
            else if(count==0)
            {
                count++;
                major=nums[i];
            }
            else
                count--;
        }
        return major;
    }
}


http://www.println.net/post/Majority-Element
http://www.programcreek.com/2014/02/leetcode-majority-element-java/
http://celinechiu0809.blogspot.tw/2014/07/java-hashmap.html
https://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#containsKey(java.lang.Object)
