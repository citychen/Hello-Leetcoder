/*
https://leetcode.com/problems/isomorphic-strings/
You are here! Runtime: 30 ms
Your runtime beats 36.31% of javasubmissions.
https://leetcode.com/submissions/detail/55727607/
idea: 使用字串編碼
*/

public class Solution {
    public boolean isIsomorphic(String s, String t) {
        if(s.length()!=t.length())
           return false;
        char Chars[]=s.toCharArray();
        char Chart[]=t.toCharArray();
        Map<Character, Integer> map = new HashMap<Character, Integer>(); //use map 去查詢是否使用過此char
        Map<Character, Integer> map1 = new HashMap<Character, Integer>();
        int a[]=new int[s.length()];    //儲存 給予字串內每個位置一個代號 -> 集合成一串數字編碼
        int b[]=new int[s.length()];
        
        for(int i=0;i<s.length();i++)  //run 字串a  
        {
            if(map.get(Chars[i])==null) //若無使用過此字, 給予此字代號存入此位置
            {
                map.put(Chars[i],i);
                a[i]=i+1;
            }
            else                        //若使用過此字, (給予此字之前賦予之代號)存入此位置
                a[i]=map.get(Chars[i]);
        }
        for(int i=0;i<s.length();i++)  //run b 與a相同事情    同時比對b之數字編碼是否與a不同  不同,則回傳false
        {
            if(map1.get(Chart[i])==null)
            {
                map1.put(Chart[i],i);
                b[i]=i+1;
            }
            else
               b[i]=map1.get(Chart[i]);
               
            if(a[i]!=b[i])
              return false;
        }
        return true;
   }
}
