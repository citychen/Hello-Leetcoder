https://leetcode.com/problems/add-strings/
Runtime: 20 ms
You are here! 
Your runtime beats 99.68% of java submissions.
https://leetcode.com/submissions/detail/92281004/


//加總,  使用char[] 保存,因此不需要多次串接的操作.
public class Solution {
    public String addStrings(String num1, String num2) {
        char num1Char[]=num1.toCharArray();
        char num2Char[]=num2.toCharArray();
        int num1Index=num1Char.length-1;
        int num2Index=num2Char.length-1;
        int carry=0;
        int res=0;
        char ans[]=new char[(num1Index>num2Index?num1Index+2:num2Index+2)];
        int ansIndex=ans.length-1;
        while(num1Index>=0 || num2Index>=0)
        {
            res=0;
            if(num1Index>=0)
                res+=(num1Char[num1Index--]-'0');
            if(num2Index>=0)
                res+=(num2Char[num2Index--]-'0');
            ans[ansIndex--]=(char)((res+carry)%10+'0');
            carry=(res+carry)/10;
        }
        ans[0]=(carry==0?'0':'1');
        
        /*
        public String(int[] codePoints,int offset,int count)
            codePoints - Array that is the source of Unicode code points
            offset - The initial offset
            count - The length
        */ 
        if (carry==0)
            return new String(ans,1,ans.length-1);
        else
            return new String(ans);
          
    }
}
