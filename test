import java.util.Scanner;
import java.util.Queue;
import java.util.LinkedList;

public class Main{
    static int n;
    static int m;
    public static void main(String[] args) {
       Scanner in=new Scanner(System.in);
       n=in.nextInt();
       m=in.nextInt();
       int x=3,y=0,d=0;
       int A[][]=new int[2*n][m];
       int Score[][]=new int[2*n][m];
       int count=2;
       int ans=0;
       
       for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
        {
            A[i][j]=in.nextInt();
            A[i+n][j]=A[i][j];
        }
       
       Queue<Integer> q1 = new LinkedList<Integer>();
       Queue<Integer> q2 = new LinkedList<Integer>();
       Queue<Integer> q3 = new LinkedList<Integer>();
       q1.offer(x);
       q2.offer(y);
       q3.offer(d);
       int c=0;
       Score[x][y]=A[x][y];
       while( (q1.peek()!=null) && (q2.peek()!=null) && (q3.peek()!=null))
       {
           x=q1.poll(); 
           y=q2.poll();
           d=q3.poll();
           Boolean dir[]=new Boolean[3];
           for(int i=0;i<3;i++) dir[i]=false;
           if(c==0)
             c=1;
           else 
             dir[d]=true;
           //往上
           if(!dir[2])
           {  if( ((x-1)>=0) && (A[x-1][y]!=-1) && (Score[x][y]+A[x-1][y]>Score[x-1][y]) )
              {  
                Score[x-1][y]=Score[x][y]+A[x-1][y];
                Score[x-1+n][y]=Score[x][y]+A[x-1][y];
                q1.offer(x-1);
                q2.offer(y);
                d=0;
                q3.offer(d);
              }
           }
           //往右
           
           if( ((y+1)<m) && (A[x][y+1]!=-1) && (Score[x][y]+A[x][y+1]>Score[x][y+1]) )
           {
               Score[x][y+1]=Score[x][y]+A[x][y+1];
               Score[x+n][y+1]=Score[x][y]+A[x][y+1];
               q1.offer(x);
               q2.offer(y+1);
               d=1;
               q3.offer(d);
           }    
           //往下
           if(!dir[0])
            if( ((x+1)<n) && (A[x+1][y]!=-1) )
           {
              if( x==(n-1) && (Score[x+1][y]==0) )  //飛機
              {
                  Score[x+1][y]=A[x+1][y];
                  Score[x+1-n][y]=A[x+1][y]; 
                  q1.offer(x+1);
                  q2.offer(y);
                  d=2;
                  q3.offer(d);
              }
              else if( Score[x][y]+A[x+1][y]>=Score[x+1][y] )        //不坐飛機
              {
                  Score[x+1][y]=Score[x][y]+A[x+1][y];
                  if((x+1+n)<2*n)
                    Score[x+1+n][y]=Score[x][y]+A[x+1][y];
                  q1.offer(x+1);
                  q2.offer(y);
                  d=2;
                  q3.offer(d);
              }
           }
       }
       
       System.out.println(Score[0][m-1]);
      
    }
}
